/* Definition section */
%{
    #include "common.h"
    #include "y.tab.h"	/* header file generated by bison */
    extern YYSTYPE yylval;
    #define YY_NO_UNPUT
    #define YY_NO_INPUT



%}


/* Define regular expression label */
letter  [a-zA-Z_]
digit [0-9]
id {letter}+({letter}|{digit})*
inumber {digit}+
fnumber ({digit}*\.{digit}+)
newline [\n]

%x CMT
%x STR
%option yylineno

/* Rules section */
%%

"/*"        { BEGIN(CMT); }
<CMT>"*/"   { BEGIN(INITIAL); }
<CMT>\n     {;}
<CMT>.      {;}
"//".*      {;}
"\""        { BEGIN(STR);
                return '"';
            }
<STR>"\""   { BEGIN(INITIAL);
                return '"';
            }
<STR>[^\"]* { yylval.s_val = strdup(yytext);
                return STRING_LIT;
            }


"print"     { return PRINT; }

 /* Declaration Keywords */
"int"		{ return INT; }
"float"  	{ return FLOAT; }
"string"  	{ return STRING; }
"bool"  	{ return BOOL; }

 /*  arithmetic */
"!"     { return NOT; }
"+"     { return ADD; }
"-" 	{ return SUB; }
"*" 	{ return MUL; }
"/" 	{ return QUO; }
"%"     { return REM; }
"++"    { return INC; }
"--"    { return DEC; }
"("     { return LPAREN;  }
")"     { return RPAREN;  }
"["     { return LBRACK; }
"]"     { return RBRACK; }
"="     { return ASGN;}
">"     { return GTR; }
"<"     { return LSS; }
">="    { return GEQ; }
"<="    { return LEQ; }
"=="    { return EQL; }
"!="    { return NEQ; }
"&&"    { return AND; }
"||"    { return OR; }

{inumber}   { yylval.i_val = atoi(yytext);
                return INT_LIT;
            }

"true"  { yylval.s_val = "TRUE";
            return BOOL_LIT;
        }

"false" { yylval.s_val = "FALSE";
            return BOOL_LIT;
        }

{fnumber}   { yylval.f_val = atof(yytext);
                return FLOAT_LIT;
            }

{id}        { yylval.s_val = strdup(yytext);
              return IDENT;
            }





[;]         { return SEMICOLON; }
[\n]        { ; }
<<EOF>>     { static int once = 0;
                if (once++) {
                    yyterminate();
                }
            }
[ \t]+      {;}
.           {;}

%%
/*  C Code section */
int yywrap(void)
{
    return 1;
}